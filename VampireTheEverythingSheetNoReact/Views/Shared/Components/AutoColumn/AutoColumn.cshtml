@using Microsoft.AspNetCore.Html
@using VampireTheEverythingSheetNoReact.Models.Component
@using VampireTheEverythingSheetNoReact.Shared_Files
@model AutoColumnModel
@{
    if(Model.HeadingLevel > 0 && !string.IsNullOrEmpty(Model.HeadingText))
    {
        AutoHeaderModel autoHeaderModel = new AutoHeaderModel
        {
            Row = Model.Row,
            Column = Model.Column,
            Width = Model.Width,
            HeadingLevel = Model.HeadingLevel,
            HeadingText = Model.HeadingText
        };

        await Component.InvokeAsync(autoHeaderModel.ViewComponentName, autoHeaderModel);

        Model.Height = autoHeaderModel.Height;
    }
    else
    {
        Model.Height = 0;
    }

    Task<IHtmlContent>[] contents = Model.Elements.ToArray();

    Task<IHtmlContent>[] gridElements = new Task<IHtmlContent>[contents.Length];

    //can't get fancy here because we need the row indices
    for (int x = 0; x < gridElements.Length; x++)
    {
        gridElements[x] = Component.InvokeAsync("GridElement", new GridElementModel
        {
            Content = contents[x],
            Column = Model.Column,
            Row = Model.RowEnd + x,
            Width = Model.Width,
            Height = 1
        });
    }

    foreach (Task<IHtmlContent> gridElement in gridElements)
    {
        @(await gridElement)
    }

    Model.Height += gridElements.Length;
}